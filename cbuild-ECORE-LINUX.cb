$cp = cp
$mv = mv
$srcDir = Unknown 1.0++
$testDir = Unknown Test

run rm UK_SRC -r
run rm UK_TEST -r

mkdir UK_SRC/src
mkdir UK_SRC/headers

mkdir UK_TEST/src
mkdir UK_TEST/headers

forall (ending)>.cpp in $srcDir
$cp "$name" UK_SRC/src
endfor

forall (ending)>.h in $srcDir
$cp "$name" UK_SRC/headers
endfor

forall (ending)>.cpp in $testDir
$cp "$name" UK_TEST/src
endfor

forall (ending)>.h in $testDir
$cp "$name" UK_TEST/headers
endfor

log Preparing for linux compilation...
log Patching windows-specific headers
run echo "" > UK_SRC/headers/stdafx.h
run rm UK_SRC/headers/targetver.h
log Patching SDL includes for compatability
rpl -R "#include <SDL.h>" "#include <SDL2/SDL.h>" UK_SRC
rpl -R "#include <SDL_image.h>" "#include <SDL2/SDL_image.h>" UK_SRC
rpl -R '#include "rapidjson\document.h"' '#include "document.h"' UK_SRC
rpl -R '#include <Math.h>' '#include <cmath>' UK_SRC
rpl -R '#include "../Unknown 1.0++/' '#include "' UK_TEST
run echo "" > UK_TEST/headers/stdafx.h
log Patching tmain to main
rpl -R 'int _tmain(int argc, _TCHAR* argv[])' 'int main(int argc, char* argv[])' UK_TEST
log Patching explicit qualification
rpl -R 'Unknown::logStatus[]' 'logStatus[]' UK_SRC
rpl -R 'std::string Unknown::concat(' 'std::string concat(' UK_SRC

log Patching done

run echo "" > UK_TEST/headers/stdafx.h

mkdir UK_SRC/obj

$compile = g++ -c -fpic -IUK_SRC/headers -ILibs/RapidJSON/include/rapidjson -std=gnu++14 -lSDL2 -lSDL2main -lSDL2_image 
compileAll * in UK_SRC/src

forall (ending)>.o
$mv "$name" UK_SRC/obj
endfor

$compile = g++ -shared -o libUK.so

compileAll * in UK_SRC/obj

$compile = g++ -IUK_TEST/headers -IUK_SRC/headers -ILibs/RapidJSON/include/rapidjson -L. -std=gnu++14 -lUK -lSDL2 -lSDL2main -lSDL2_image

compileAll * in UK_TEST/src

log Compilation completed successfully
